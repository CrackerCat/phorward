#!/bin/sh
# -SCRIPT-----------------------------------------------------------------------
# Phorward Foundation Toolkit
# Copyright (C) 2006-2012 by Phorward Software Technologies, Jan Max Meyer
# http://www.phorward-software.com ++ contact<at>phorward<dash>software<dot>com
# All rights reserved. See $PHOME/LICENSE for more information.
#
# File:		pconfigure
# Usage:	Phorward Build System Configuration Script Library
# ------------------------------------------------------------------------------

# Variables
PCONF_CONFDIR="`pwd`"
PCONF_TEMPDIR="$PCONF_CONFDIR/tmp$$"

PCONF_ENV=""
PCONF_AWK=""
PCONF_MAKE=""
PCONF_CC=""

PCONF_SIMPLE_C_PROGRAM="int main() { return 0; }"

# Some Default Tests

# Test if "echo -n" does not work on this system
if [ `echo -n abc` = "-n abc" ]
then
	N=""
else
	N="-n"
fi

# Default Functions
pconf_exit()
{
	pconf_drop_tempdir
	exit $1
}

pconf_msg()
{
	if [ "$*" ]
	then
		echo "$*" >&2
	fi
}

pconf_status()
{
	if [ "$*" ]
	then
		echo $N "$*..." >&2
	fi
}

pconf_status_testfor()
{
	if [ "$1" ]
	then
		TESTFOR="Testing for $1"
		if [ "$2" ]
		then
			TESTFOR="$TESTFOR [$2]"
		fi

		pconf_status "$TESTFOR"
	fi
}

pconf_status_fail()
{
	if [ "$1" ]
	then
		echo "Failed: $1" >&2
	else
		echo "Failed" >&2
	fi
	pconf_exit 1
}

pconf_status_success()
{
	if [ "$1" ]
	then
		echo "$1" >&2
	else
		echo "Succeed" >&2
	fi
}

# Internal functions

pconf_goto_tempdir()
{
	cd "$PCONF_TEMPDIR"

	if [ $? -ne 0 ]
	then
		echo "Fatal error: Can't change to $PCONF_TEMPDIR"
		exit 1
	fi
}

pconf_goto_confdir()
{
	cd "$PCONF_CONFDIR"

	if [ $? -ne 0 ]
	then
		echo "Fatal error: Can't change to $PCONF_CONFDIR"
		exit 1
	fi
}

pconf_create_tempdir()
{
	pconf_status "Creating test directory"
	mkdir $PCONF_TEMPDIR

	if [ $? -ne 0 ]
	then
		pconf_status_fail
	else
		pconf_status_success
	fi
}

pconf_clear_tempdir()
{
	if [ -d $PCONF_TEMPDIR ]
	then
		rm -rf $PCONF_TEMPDIR/*
	fi
}

pconf_drop_tempdir()
{
	pconf_goto_confdir
	if [ -d $PCONF_TEMPDIR ]
	then
		pconf_status "Dropping test directory"

		pconf_clear_tempdir
		rmdir $PCONF_TEMPDIR
		
		if [ $? -ne 0 ]
		then
			pconf_status_fail
		else
			pconf_status_success
		fi
	fi
}

pconf_remove()
{
	if [ "$*" ]
	then
		rm -f $*
	fi
}

pconf_add_config()
{
	PCONF_CONFLIST="$PCONF_CONFLIST $*"
}

pconf_print_config()
{
	for i in $PCONF_CONFLIST
	do
		eval echo $i=\$$i
	done
}

# Test Scenarios

pconf_test_env()
{
	if [ "$PCONF_ENV" ]
	then
		return
	fi

	pconf_status_testfor "unix command environment"
	pconf_goto_tempdir

	# touch command
	touch testfile
	if [ $? -ne 0 ]
	then
		pconf_status_fail "incorrect touch"
	fi

	# rm command
	rm -f testfile
	if [ $? -ne 0 ]
	then
		pconf_status_fail "incorrect rm"
	fi

	# cat command
	echo "Hello World" >testfile
	cat testfile >/dev/null 2>&1
	if [ $? -ne 0 ]
	then
		pconf_status_fail "incorrect cat"
	fi

	# cp command
	touch a
	cp a b
	if [ $? -ne 0 -o ! -f b ]
	then
		pconf_status_fail "incorrect cp"
	fi

	# mv command
	pconf_clear_tempdir

	touch a
	mv a b
	if [ $? -ne 0 -o ! -f b -a -f a ]
	then
		pconf_status_fail "incorrect mv"
	fi

	# expr command
	TEST=`expr 2 + 6`
	if [ $? -ne 0 -o "$TEST" != "8" ]
	then
		pconf_status_fail "incorrect expr"
	fi

	# cut command
	TEST=`echo "a b c d" | cut -f 3 -d ' '`
	if [ $? -ne 0 -o "$TEST" != "c" ]
	then
		pconf_status_fail "incorrect cut"
	fi

	# uname command
	PCONF_ENV=`uname -a`
	if [ $? -ne 0 ]
	then
		pconf_status_fail "incorrect uname"
	fi

	pconf_clear_tempdir
	pconf_goto_confdir
	pconf_status_success
}

pconf_test_awk()
{
	if [ "$PCONF_AWK" ]
	then
		return
	fi

	if [ "$1" ]
	then
		AWKLIST="$1"
	else
		AWKLIST="awk gawk nawk"
	fi

	pconf_status_testfor "AWK interpreter", "$AWKLIST"
	pconf_goto_tempdir

	echo "BEGIN		{	FS=\";\"		}" >test.awk
	echo "			{	print \$1 \$3	}" >>test.awk

	TESTRESULT="ac"
	for i in $AWKLIST
	do
		TEST=`echo "a;b;c" | $i -f test.awk`
		if [ $? -eq 0 -a "$TEST" = "$TESTRESULT" ]
		then
			PCONF_AWK=$i
			break
		fi
	done

	pconf_remove test.awk
	pconf_goto_confdir

	if [ -z "$PCONF_AWK" ]
	then
		pconf_status_fail
	fi

	pconf_add_config PCONF_AWK
	pconf_status_success $PCONF_AWK
}

pconf_test_make()
{
	if [ "$PCONF_MAKE" ]
	then
		return
	fi

	if [ "$1" ]
	then
		MAKELIST="$1"
	else
		MAKELIST="make gmake nmake"
	fi

	pconf_status_testfor "make utility", "$MAKELIST"
	pconf_goto_tempdir

	echo "all:" >Makefile

	for i in $MAKELIST
	do
		$i >/dev/null 2>&1
		if [ $? -ne 0 ]
		then
			continue
		fi

		if [ "$PCONF_CC" ]
		then
			pconf_clear_tempdir
			echo -e "all: test.c\n\t" >Makefile

		fi

		PCONF_MAKE=$i
		break
	done

	pconf_remove Makefile
	pconf_goto_confdir

	if [ -z "$PCONF_MAKE" ]
	then
		pconf_status_fail
	fi

	pconf_add_config PCONF_MAKE
	pconf_status_success $PCONF_MAKE
}

pconf_test_cc()
{
	if [ "$PCONF_CC" ]
	then
		return
	fi

	if [ "$1" ]
	then
		CCLIST="$1"
	else
		CCLIST="cc gcc cl"
	fi

	CCFLAGLIST_OUTPUT="-o"
	CCFLAGLIST_COMPILE="-c"
	CCFLAGLIST_DEFINE="-D"
	CCFLAGLIST_INCLUDE="-I"

	pconf_test_env
	pconf_test_awk

	pconf_status_testfor "C compiler", "$CCLIST"
	pconf_goto_tempdir
	
	for i in $CCLIST
	do
		pconf_clear_tempdir

		# Check if compiler exists
		echo $PCONF_SIMPLE_C_PROGRAM >test.c

		$i test.c >/dev/null 2>&1
		if [ $? -ne 0 ]
		then
			continue
		fi

		# Test, if compiler accepts "-o"
		pconf_clear_tempdir

		for j in $CCFLAGLIST_OUTPUT
		do
			echo $PCONF_SIMPLE_C_PROGRAM >test.c
			$i $j test1 test.c >/dev/null 2>&1

			if [ $? -eq 0 ]
			then
				PCONF_CC_FLAG_OUTPUT=$j
				break
			fi
		done

		if [ -z "$PCONF_CC_FLAG_OUTPUT" ]
		then
			continue
		fi

		# Figure out executable file extension
		pconf_remove "test.c"

		count=0
		for j in *
		do
			exe_filename=$j
			./$exe_filename >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			count=`expr $count + 1`
			if [ $count -gt 1 ]
			then
				break
			fi

			pconf_remove $exe_filename
			PCONF_EXEEXT=`echo $j | awk -F . '{ if( NF > 1 ) print $NF }'`
		done

		if [ $count -ne 1 ]
		then
			#This compiler generates multple or no executable-files?
			continue
		fi

		if [ "$PCONF_EXEEXT" ]
		then
			PCONF_EXEEXT=".$PCONF_EXEEXT"
		fi

		# Test, if compiler accepts "-c"
		pconf_clear_tempdir

		for j in $CCFLAGLIST_COMPILE
		do
			echo $PCONF_SIMPLE_C_PROGRAM >test.c
			$i $j test.c >/dev/null 2>&1
			if [ $? -eq 0 ]
			then
				PCONF_CC_FLAG_COMPILE="$j"
				break
			fi
		done

		if [ -z "$PCONF_CC_FLAG_COMPILE" ]
		then
			continue
		fi

		# Figure out object file extension
		pconf_remove "test.c"
		count=0
		for j in *
		do
			count=`expr $count + 1`
			if [ $count -gt 1 ]
			then
				break
			fi

			object_filename=$j
			PCONF_OBJEXT=`echo $j | awk -F . '{ if( NF > 1 ) print $NF }'`
			pconf_remove $j
		done

		if [ $count -ne 1 ]
		then
			#This compiler generates multple .o-files?
			continue
		fi

		if [ "$PCONF_OBJEXT" ]
		then
			PCONF_OBJEXT=".$PCONF_OBJEXT"
		fi

		# Does PCONF_CC_FLAG_OUTPUT work both for executables and for objects?
		echo $PCONF_SIMPLE_C_PROGRAM >test.c
		$i $PCONF_CC_FLAG_OUTPUT test$PCONF_OBJEXT \
			$PCONF_CC_FLAG_COMPILE test.c >/dev/null 2>&1
		if [ $? -ne 0 -o ! -f test$PCONF_OBJEXT ]
		then
			continue
		fi

		$i $PCONF_CC_FLAG_OUTPUT test$PCONF_EXEEXT test.c >/dev/null 2>&1
		if [ $? -ne 0 -o ! -f test$PCONF_EXEEXT ]
		then
			continue
		fi
		
		# Check for Define-switch
		for j in $CCFLAGLIST_DEFINE
		do
			echo -e "#include <stdlib.h>\n#include <stdio.h>\n" >testdef.c
			echo -e "#ifndef TESTDEF\n#define TESTDEF 0\n#endif" >>testdef.c
			echo "int main() { printf( \"T%d\", TESTDEF); return 0; }" >>testdef.c

			$i $PCONF_CC_FLAG_OUTPUT testdef$PCONF_EXEEXT \
				${j}TESTDEF=1 testdef.c >/dev/null 2>&1

			if [ $? -eq 0 ]
			then
				if [ `./testdef$PCONF_EXEEXT` = "T1" ]
				then
					PCONF_CC_FLAG_DEFINE=$j
					break
				fi
			fi
		done

		if [ -z "$PCONF_CC_FLAG_DEFINE" ]
		then
			continue
		fi

		# Check for Include-switch
		for j in $CCFLAGLIST_INCLUDE
		do
			mkdir incdir
			echo "#define TESTDEF 1" >incdir/testinc.h

			echo "#include <testinc.h>" >testinc.c
			echo $PCONF_SIMPLE_C_PROGRAM >>testinc.c

			$i -o testdef$PCONF_EXEEXT ${j}incdir testinc.c >/dev/null 2>&1
			if [ $? -eq 0 ]
			then
				PCONF_CC_FLAG_INCLUDE="$j"
				break
			fi
		done

		if [ -z "$PCONF_CC_FLAG_DEFINE" ]
		then
			continue
		fi

		# That's it! :)
		PCONF_CC=$i
		break
	done

	pconf_goto_confdir

	if [ -z "$PCONF_CC" ]
	then
		pconf_status_fail
	fi

	pconf_add_config PCONF_CC PCONF_CC_FLAG_COMPILE \
						PCONF_CC_FLAG_DEFINE \
						PCONF_CC_FLAG_INCLUDE \
						PCONF_CC_FLAG_OUTPUT \
						PCONF_OBJEXT PCONF_EXEEXT
	pconf_status_success $PCONF_CC

	if [ "$PCONF_OBJEXT" ]
	then
		pconf_msg "Object file extension is \"$PCONF_OBJEXT\""
	fi

	if [ "$PCONF_EXEEXT" ]
	then
		pconf_msg "Executable file extension is \"$PCONF_EXEEXT\""
	fi
}

pconf_test_ld()
{
	if [ "$PCONF_LD" ]
	then
		return
	fi

	pconf_test_cc

	if [ "$1" ]
	then
		LDLIST="$1"
	else
		# If Visual C++ Compiler, try only its tools
		if [ "$PCONF_CC" = "cl" ]
		then
			LDLIST="link cl"
		else
			LDLIST="cc gcc link cl"
		fi
	fi

	NAMEOPT="-o -out:"

	pconf_status_testfor "executable linker", "$LDLIST"
	pconf_goto_tempdir
	
	for i in $LDLIST
	do
		pconf_clear_tempdir

		# Compile a program first
		echo $PCONF_SIMPLE_C_PROGRAM >test.c

		$PCONF_CC -c test.c >/dev/null 2>&1
		if [ $? -ne 0 ]
		then
			pconf_status_fail "$PCONF_CC incorrect?"
		fi

		pconf_remove "test.c"

		# Check if linker can be invoked?
		$i test$PCONF_OBJEXT >/dev/null 2>&1
		if [ $? -ne 0 ]
		then
			continue
		fi

		pconf_remove "test$PCONF_OBJEXT"

		# Test if output file can be executed
		count=0
		for j in *$PCONF_EXEEXT
		do
			exe_filename=$j
			./$exe_filename >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			count=`expr $count + 1`
			if [ $count -gt 1 ]
			then
				break
			fi

			pconf_remove $exe_filename
		done

		if [ $count -ne 1 ]
		then
			#This linker generates multple or no executable-files?
			continue
		fi

		# Test if there is a way to change the output filename?
		for j in $NAMEOPT
		do
			# Compile a program first
			echo $PCONF_SIMPLE_C_PROGRAM >test.c

			$PCONF_CC -c test.c >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				pconf_status_fail "$PCONF_CC incorrect?"
			fi

			pconf_remove "test.c"

			# try to call linker
			$i ${j}hello$PCONF_EXEEXT test$PCONF_OBJEXT >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			./hello$PCONF_EXEEXT >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			PCONF_LD_FLAG_OUTPUT=$j
			break
		done

		if [ -z "$PCONF_LD_FLAG_OUTPUT" ]
		then
			continue
		fi

		PCONF_LD=$i
		break
	done

	pconf_goto_confdir

	if [ -z "$PCONF_LD" ]
	then
		pconf_status_fail
	fi

	pconf_add_config PCONF_LD PCONF_LD_FLAG_OUTPUT
	pconf_status_success $PCONF_LD
}

pconf_test_ar()
{
	if [ "$PCONF_AR" ]
	then
		return
	fi

	pconf_test_cc

	if [ "$1" ]
	then
		ARLIST="$1"
	else
		if [ "$PCONF_CC" = "cl" ]
		then
			ARLIST="lib"
		else
			ARLIST="ar lib"
		fi
	fi

	NAMEOPT="cru -out:"


	pconf_status_testfor "static library archiver", "$LIBLIST"
	pconf_goto_tempdir
	
	for i in $ARLIST
	do
		pconf_clear_tempdir

		# Compile a library
		echo "int a() { return 10; } int b() { return 20; }" >testlib.c

		$PCONF_CC -c testlib.c >/dev/null 2>&1
		if [ $? -ne 0 ]
		then
			pconf_status_fail "$PCONF_CC incorrect?"
		fi

		pconf_remove "testlib.c"

		# Check if archiver can be invoked?
		$i test$PCONF_OBJEXT >/dev/null 2>&1
		if [ $? -ne 0 ]
		then
			continue
		fi

		pconf_remove "test$PCONF_OBJEXT"

		# Test if output file can be executed
		count=0
		for j in *$PCONF_EXEEXT
		do
			exe_filename=$j
			./$exe_filename >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			count=`expr $count + 1`
			if [ $count -gt 1 ]
			then
				break
			fi

			pconf_remove $exe_filename
		done

		if [ $count -ne 1 ]
		then
			#This linker generates multple or no executable-files?
			continue
		fi

		# Test if there is a way to change the output filename?
		for j in $NAMEOPT
		do
			# Compile a program first
			echo $PCONF_SIMPLE_C_PROGRAM >test.c

			$PCONF_CC -c test.c >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				pconf_status_fail "$PCONF_CC incorrect?"
			fi

			pconf_remove "test.c"

			# try to call linker
			$i ${j}hello$PCONF_EXEEXT test$PCONF_OBJEXT >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			./hello$PCONF_EXEEXT >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				continue
			fi

			PCONF_LD_FLAG_OUTPUT=$j
			break
		done

		if [ -z "$PCONF_LD_FLAG_OUTPUT" ]
		then
			continue
		fi

		PCONF_LD=$i
		break
	done

	pconf_goto_confdir

	if [ -z "$PCONF_LD" ]
	then
		pconf_status_fail
	fi

	pconf_add_config PCONF_LD PCONF_FLAG_OUTPUT
	pconf_status_success $PCONF_LD
}

# Main

pconf_create_tempdir
pconf_test_env

pconf_test_awk
pconf_test_cc
pconf_test_ld
pconf_test_make

pconf_print_config
pconf_exit 0
